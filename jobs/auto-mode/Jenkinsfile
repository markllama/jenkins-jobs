// Test OCP auto mode
properties(
    [
        buildDiscarder(
            logRotator(
                artifactDaysToKeepStr: '5',
                artifactNumToKeepStr: '10',
                daysToKeepStr: '5',
                numToKeepStr: '10')),
        [
            $class: 'ParametersDefinitionProperty',
            parameterDefinitions: [
                [
                    name: 'TARGET_NODE',
                    description: 'Jenkins agent node',
                    $class: 'hudson.model.StringParameterDefinition',
                    defaultValue: 'container'
                ],
                [
                    name: 'BUILD_VERSION',
                    description: 'The version to try to build',
                    $class: 'hudson.model.StringParameterDefinition',
                    defaultValue: 'latest'
                ],
                [
                    name: 'SSH_KEY_ID',
                    description: 'SSH credential id to use',
                    $class: 'hudson.model.ChoiceParameterDefinition',
                    choices: [
                        "markllama-aos-cd-bot",
                        "markllama"
                    ].join("\n"),
                    defaultValue: 'markllama-aos-cd-bot'
                ],
            ]
        ],
        disableConcurrentBuilds()
    ]
)

def get_branches(repo_url, pattern="") {

    branch_text = sh(
        returnStdout: true,
        script: [
            "git ls-remote ${repo_url} ${pattern}",
            "awk '{print \$2}'",
            "cut -d\\\ -f3"
        ].join(" | ")
    ).trim()

    return branch_text.split("\n")
}

def checkout_repo(repo_url, repo_path) {
    sh(
        "git clone ${repo_url} ${repo_path}"
    )
}

node(TARGET_NODE) {

    ose_repo_url = "git@github.com:markllama/ose.git"
    
    stage("startup") {
        echo "building ${BUILD_VERSION}"
    }

    sshagent([SSH_KEY_ID]) {
        stage("get release branches") {
            branches = get_branches(ose_repo_url, "enterprise-*")
            echo "found branches: ${branches}"
        }
        
        stage("checkout repo") {
            checkout_repo(
                ose_repo_url,
                "ose"
            )
        }
    }
}
